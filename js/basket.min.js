window.basket = {
    store: {}, events: {update: "basket:update", clear: "basket:clear"}, get: function (t) {
        return t = parseInt(t, 10), window.basket.store[t]
    }, add: function (t, e) {
        var a = void 0 !== e ? parseInt(e, 10) : 1;
        t = parseInt(t, 10), window.basket.store[t] = window.basket.store[t] ? window.basket.store[t] + a : a, $.ajax({
            url: "index.php?route=checkout/cart/add",
            type: "post",
            data: "product_id=" + t + "&quantity=" + a,
            dataType: "json"
        }).success(function () {
            window.basket.updateCurrentBasket()
        })
    }, minus: function (t, e) {
        var a = void 0 !== e ? parseInt(e, 10) : 1;
        t = parseInt(t, 10), window.basket.store[t] && (window.basket.store[t] = window.basket.store[t] - a), $.ajax({
            url: "index.php?route=checkout/cart/minus",
            type: "post",
            data: "product_id=" + t + "&quantity=" + a,
            dataType: "json"
        }).success(function () {
            window.basket.updateCurrentBasket()
        })
    }, update: function (t, e, a) {
        var n = {quantity: {}};
        t = parseInt(t, 10), e = parseInt(e, 10), a = parseInt(a, 10), n.quantity[t] = a, window.basket.store[e] = a, $.ajax({
            url: "index.php?route=checkout/cart/edit",
            type: "post",
            data: n,
            dataType: "json"
        }).success(function () {
            window.basket.updateCurrentBasket()
        })
    }, remove: function (t, e) {
        t = parseInt(t, 10), e = parseInt(e, 10), delete window.basket.store[e], $.ajax({
            url: "index.php?route=checkout/cart/remove",
            type: "post",
            data: "key=" + t,
            dataType: "json"
        }).success(function () {
            window.basket.updateCurrentBasket()
        })
    }, clear: function () {
        return window.basket.store = {}, $.ajax({
            url: "index.php?route=checkout/cart/clear",
            type: "post",
            dataType: "json"
        }).success(function () {
            window.basket.updateCurrentBasket()
        })
    }, dispatchUpdateEvent: function (t) {
        var e = new CustomEvent(window.basket.events.update, {detail: t});
        window.dispatchEvent(e)
    }, dispatchClearEvent: function () {
        var t = new CustomEvent(window.basket.events.clear);
        window.dispatchEvent(t)
    }, getTotal: function () {
        return window.totals && window.totals[0] ? window.totals[0].text : ""
    }, loadCurrentBasket: function () {
        clearTimeout(window.basket.timer), window.basket.timer = setTimeout(function () {
            var t = new XMLHttpRequest;
            t.onreadystatechange = function () {
                if (4 === this.readyState && 200 === this.status) try {
                    var t = JSON.parse(this.response);
                    t.products.forEach(function (t) {
                        var e = parseInt(t.product_id, 10), a = parseInt(t.quantity, 10);
                        window.basket.store[e] = a
                    }), window.totals = t.totals, window.basket.current = t, window.basket.dispatchUpdateEvent()
                } catch (t) {
                    console.error(t)
                }
            }, t.open("GET", "/index.php?route=checkout/cart/json_info", !0), t.setRequestHeader("Content-type", "application/json"), t.send()
        }, 1e3)
    }, updateCurrentBasket: function () {
        var t = new XMLHttpRequest;
        t.open("GET", "/index.php?route=checkout/cart/json_info", !0), t.setRequestHeader("Content-type", "application/json"), t.send(), t.onreadystatechange = function () {
            if (4 === this.readyState && 200 === this.status) try {
                var t = JSON.parse(this.response);
                t.products.forEach(function (t) {
                    var e = parseInt(t.product_id, 10), a = parseInt(t.quantity, 10);
                    window.basket.store[e] = a
                }), window.totals = t.totals, window.basket.current = t, window.basket.dispatchUpdateEvent()
            } catch (t) {
                console.error(t)
            }
        }
    }
}, window.basket.loadCurrentBasket();